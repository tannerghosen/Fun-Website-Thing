@page
@using static Microsoft.AspNetCore.Mvc.RazorPages.PageBase;
@using MySql.Data;
@using MySql.Data.MySqlClient;
@using System.Text.RegularExpressions;
@inject MySQLStuff s
@model SandboxModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<!-- Registration Form -->
<form method="post">
    <fieldset>
        <legend>Register</legend>
        <div>
            <label for="username">Email:</label>
            <input type="text" name="email" value="" />
        </div>
        <div>
            <label for="username">Username:</label>
            <input type="text" name="username" value="" />
        </div>
        <div>
            <label for="password">Password:</label>
            <input type="text" name="password" value="" id="pass" />
        </div>
        <div>
            <label>&nbsp;</label>
            <input type="submit" value="Submit" class="submit" />
        </div>
    </fieldset>
</form>
<script>
    function GeneratePass() 
    {
        $.ajax({
            type: "GET",
            url: "api/Misc/GeneratePassword", // this is the path to get the GeneratePassword function from MiscController. (think of it like API -> ClassName -> MethodName (if included in the controller))
            success: function (data) 
            {
                document.getElementById("pass").value = data.password; // get the password from our MiscController
            }
        });
    }
</script>
<button onclick="GeneratePass()">Generate Pass</button>
@{
        if (HttpMethods.IsPost(Request.Method)) // if we POST
        {
            string email = Request.Form["email"];
            string username = Request.Form["username"];
            string password = Request.Form["password"];
            //string favcolor = Request.Form["favcolor"];
                if (!Regex.IsMatch(email, @"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$") || string.IsNullOrEmpty(email)) // if email doesn't match regex / is empty
                {
                    <div style="background-color: #400; border-color: #500; border-radius: 1px;">
                        Invalid email
                    </div>
                }
                else if(string.IsNullOrEmpty(username)) // if username is empty
                {
                    <div style="background-color: #400; border-color: #500; border-radius: 1px;">
                        Invalid username
                    </div>
                }
                else if(string.IsNullOrEmpty(password)) // if password is empty
                {
                    <div style="background-color: #400; border-color: #500; border-radius: 1px;">
                        Invalid password
                    </div>
                }
                else
                {
                    string result = s.Register(email, username, password); // Registers our account, hopefully
                    if(!string.IsNullOrEmpty(result)) // If we do (or don't), return the result
                    {
                        <div style="background-color: #444; border-color: #555; border-radius: 1px;">
                            @result
                        </div>
                    }
                }
        }
}